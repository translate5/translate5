/*
 * File: app/view/comment/Column.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Erp.view.comment.Column', {
    extend: 'Ext.grid.column.Column',
    alias: 'widget.commentcolumn',

    requires: [
        'Erp.view.comment.ColumnViewModel',
        'Ext.grid.filters.filter.String'
    ],

    viewModel: {
        type: 'commentcolumn'
    },
    dataIndex: 'comments',
    text: 'Kommentare',

    filter: {
        type: 'string'
    },

    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
        if(!value || value.length === 0) {
            return '<img class="add" src="'+Ext.BLANK_IMAGE_URL+'">';
        }
        metaData.tdAttr = 'data-qtip="'+Ext.String.htmlEncode(value)+'"';
        //edit icon currently disabled
        return metaData.column.getFirstComment(value); // + '<img class="edit" src="'+Ext.BLANK_IMAGE_URL+'">';
    },

    getFirstComment: function(comments) {
        var more, text,
            split = comments.split(/<\/div>[^<]*<div class="comment">/);
        if(split.length > 1) {
            text = split.length == 2 ? '({0} weiterer Kommentar)' : '({0} weitere Kommentare)';
            more = Ext.String.format(text, (split.length - 1));
            return split[0] + '<span class="ellipsis"> ... '+more+'</span></div>'; //add stripped end tag and ...
        }
        return split[0];
    }

});