/*
 * File: app/view/project/FormViewModel.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Erp.view.project.FormViewModel', {
    extend: 'Ext.app.ViewModel',
    alias: 'viewmodel.projectForm',

    requires: [
        'Ext.data.Store',
        'Ext.util.Sorter',
        'Ext.data.field.Integer',
        'Ext.data.proxy.Rest',
        'Ext.data.reader.Array',
        'Ext.app.bind.Formula'
    ],

    stores: {
        customers: {
            pageSize: 0,
            storeId:'formCustomers',
            remoteSort: true,
            autoLoad: false,
            model: 'Erp.model.Customer',
            listeners:{
                load:'onCustomersStoreLoad'
            },
            sorters: {
                property: 'name'
            }
        },
        pmusers: {
            autoLoad: true,
            storeId:'pmUsers',
            pageSize:0,
            fields: [
                {
                    type: 'int',
                    name: 'id'
                },
                {
                    convert: function(v, rec) {
                        return rec.data.surName+', '+rec.data.firstName;
                    },
                    name: 'text'
                }
            ],
            proxy: {
                type: 'rest',
                url: 'erp/user/pm',
                reader: {
                    type: 'json',
                    rootProperty: 'rows'
                }
            }
        },
        conversionYears: {
            data: [
                
            ],
            proxy: {
                type: 'ajax',
                reader: {
                    type: 'array'
                }
            },
            fields: [
                {
                    name: 'year'
                }
            ]
        }
    },
    data: {
        state: null
    },
    formulas: {
        billdateDisabled: function(get) {
            return !get('stateresult.isOrdered') || get('stateresult.isPaid');
        },
        isOfferedStatus:function(get){
            return get('state')=='offered';
        }
    }

});