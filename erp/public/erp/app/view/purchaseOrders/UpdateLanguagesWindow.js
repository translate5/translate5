/*
 * File: app/view/purchaseOrders/CreateWindow.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Erp.view.purchaseOrders.UpdateLanguagesWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.updatelanguageswindow',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.Display',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Number',
        'Ext.form.field.Date',
        'Ext.button.Button',
        'Ext.form.field.ComboBox'
    ],
    layout: 'fit',
    autoScroll:true,
    autoHeight:true,
    title: 'Projektsprachen',
    modal: true,
    alwaysOnTop:true,
    closable:false,
    findFirst: function(item){
        if (item instanceof Ext.form.Field && !item.hidden && !item.disabled && !item.value){
            //custom delay is used because the delay of the focus method is not working(maybe this is a extjs bug)
            var task = new Ext.util.DelayedTask(function(){
                item.focus();
                return true;
            });
            task.delay(10);
        }
        if (item.items && item.items.findBy) {
            return item.items.findBy(this.findFirst,this);
        }
        return false;
    },
    focus: function(){
        // set focus to first available field
        this.items.findBy(this.findFirst,this);
    },
    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                items: [
                    {
                    xtype: 'form',
                    bodyPadding: 10,
                    autoHeight:true,
                    defaultButton: 'saveButton',
                    fieldDefaults: {
                        anchor: '100%'
                    },
                    items:[{
                        xtype: 'fieldset',
                        flex: 1,
                        title: '',
                        items:[{
                            xtype:'combo',
                            fieldLabel:'Quellsprache',
                            name:'sourceLang',
                            store:new Ext.data.ArrayStore({
                                data: Erp.data.sourceLanguages,
                                fields: ['id','value','text'],
                            }),
                            emptyText:'-- Bitte auswählen --',
                            submitEmptyText:false,
                            allowBlank: false,
                            queryMode: 'local',
                            typeAhead: true,
                            minChars:1,
                            onFocusLeave:function(e){
                                var me=this,
                                    val =me.getValue();
                                if(val!=null && val!="" && !me.findRecordByValue(val)){
                                    me.setValue(null);
                                }
                            },
                            displayField:'text',
                            valueField:'id',
                        },
                        {
                            xtype:'tagfield',
                            name: 'targetLang',
                            fieldLabel: 'Zielsprachen',
                            allowBlank: false,
                            queryMode: 'local',
                            blankText: "Dieses Feld darf nicht leer sein",
                            displayField: 'text',
                            valueField: 'id',
                            store: new Ext.data.ArrayStore({
                                data: Erp.data.targetLanguages,
                                fields: ['id','value','text'],
                            })
                        }],
                    }],
                    dockedItems: [
                        {
                            xtype: 'container',
                            dock: 'bottom',
                            padding: 10,
                            layout: {
                                type: 'hbox',
                                align: 'middle',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    itemId: 'saveButton',
                                    margin: 5,
                                    text: 'Speichern',
                                    listeners: {
                                        click: function(){
                                            me.saveLanguages();
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                    }
                ],
            };
        if (instanceConfig) {
            me.self.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },
    saveLanguages:function(){
        var me=this,
            record=Ext.create('Erp.model.Project', {
                id:me.project.get('id'),
                customerId:me.project.get('customerId')
            }),
            sourceLang=me.down('combobox'),
            targetLang=me.down('tagfield'),
            targetLangVals=",";

        targetLang.getValue().forEach(function(element) {
            targetLangVals+=element+",";
        });

        record.load({
            success: function(record, operation) {
                record.set('sourceLang',sourceLang.getValue());
                record.set('targetLang',targetLangVals);
                record.save({
                    success:function(){
                        me.callbackfunction(sourceLang.getValue(),targetLangVals);
                        //display info message if the project languages are changed
                        var msg = 'Projekt "{0}" wurde geändert!';
                        Erp.MessageBox.addSuccess(Ext.String.format(msg, me.project.get('id')));
                        me.destroy();
                    }
                });
            },
        });
    }
});
