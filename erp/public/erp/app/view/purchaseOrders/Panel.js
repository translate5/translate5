/*
 * File: app/view/purchaseOrders/Panel.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Erp.view.purchaseOrders.Panel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.purchaseorderspanel',

    requires: [
        'Erp.view.purchaseOrders.PanelViewModel',
        'Erp.view.purchaseOrders.PanelViewController',
        'Erp.view.comment.Column',
        'Erp.view.purchaseOrders.Form',
        'Erp.view.comment.Panel',
        'Ext.grid.Panel',
        'Ext.grid.column.Number',
        'Ext.grid.filters.filter.Number',
        'Ext.grid.column.Date',
        'Ext.grid.filters.filter.Date',
        'Ext.grid.filters.filter.String',
        'Ext.grid.filters.filter.List',
        'Ext.grid.column.Boolean',
        'Ext.grid.filters.filter.Boolean',
        'Ext.selection.RowModel',
        'Ext.XTemplate',
        'Ext.view.Table',
        'Ext.grid.filters.Filters',
        'Ext.form.Panel',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.toolbar.Separator',
        'Erp.view.Moneycolumn'
    ],

    controller: 'purchaseorderspanel',
    viewModel: {
        type: 'purchaseorderspanel'
    },
    shrinkWrap: 0,
    layout: 'border',
    collapsed: false,
    title: 'My Panel',
    defaultListenerScope: true,
    listeners: {
        render: {
            fn: 'onPurchaseOrdersPanelRender',
            scope: 'controller'
        }
    },
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            items: [
                {
                    xtype: 'button',
                    iconCls: 'icon-excel',
                    text: 'Excel Export',
                    listeners: {
                        click: {
                            fn: 'exportXls1',
                            scope: 'controller'
                        }
                    }
                },
                {
                    xtype: 'tbseparator'
                },
                {
                    xtype: 'button',
                    iconCls: 'icon-refresh',
                    text: 'Aktualisieren',
                    listeners: {
                        click: {
                            fn: 'reload',
                            scope: 'controller'
                        }
                    }
                },
                {
                    xtype: 'tbseparator'
                },
                {
                    xtype: 'button',
                    text: 'Sortierung / Filterung zurücksetzen',
                    listeners: {
                        click: {
                            fn: 'clearFilterAndSort',
                            scope: 'controller'
                        }
                    }
                }
            ]
        }
    ],

    initConfig: function (instanceConfig) {
        var me = this,
            sumpanel = {
                xtype: 'panel',
                dock: 'top',
                frame: true,
                height: 40,
                loader: {
                    url: 'erp/purchaseorder/sum',
                    loadMask: true,
                    renderer: 'data'
                },
                tpl: new Ext.XTemplate('<tpl for=".">',
                    '<table class="fixedsumtable"> ',
                    '<col width="50px" />',
                    '<col width="100px" />',
                    '<col width="120px" />',
                    '<col width="5px" />',
                    '<col width="100px" />',
                    '<col width="150px" />',
                    '<tr> ',
                    '<td>&sum; Netto</td> ',
                    '<td align="right"><b>{[this.currencyType(values.rows.netValue)]}</b></td> ',
                    '<td align="right"> (+ USt. {[this.currencyType(values.rows.taxValue)]} </td> ',
                    '<td> = </td> ',
                    '<td align="right">{[this.currencyType(values.rows.grossValue)]}</td> ',
                    '<td align="right"> | Marge <b>{[this.numberType(values.rows.rawMargin)]}</b> %)</td> ',
                    '</tr> ',
                    '</table> ',
                    '</tpl>', {
                        currencyType: function (val) {
                            return Erp.Utils.currency(val, '');
                        },
                        numberType: function (val) {
                            return Erp.Utils.negativeNumber(val);
                        }
                    }),
                ui: 'default-framed'
            },
            config = {
                items: [
                    {
                        xtype: 'gridpanel',
                        //flex: 1,
                        region: 'center',
                        split: true,
                        reference: 'list',
                        resizable: false,
                        title: '',
                        bind: {
                            store: '{purchaseOrders}'
                        },
                        columns: [
                            {
                                xtype: 'numbercolumn',
                                width: 65,
                                dataIndex: 'orderId',
                                text: 'Auftragsnr.',
                                tooltip: 'Auftragsnummer',
                                format: '00',
                                align: 'right',
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                width: 50,
                                dataIndex: 'number',
                                text: 'PO Nr.',
                                tooltip: 'laufende Auftrags PO Nummer',
                                format: '00',
                                align: 'right',
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'datecolumn',
                                width: 80,
                                dataIndex: 'creationDate',
                                text: 'PO Erstellt',
                                tooltip: 'PO Erstellt',
                                filter: {
                                    type: 'date'
                                }
                            },
                            {
                                xtype: 'datecolumn',
                                width: 80,
                                dataIndex: 'deliveryDate',
                                text: 'Lieferdatum',
                                tooltip: 'Lieferdatum',
                                filter: {
                                    type: 'date'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 150,
                                dataIndex: 'customerName',
                                text: 'Kundenname',
                                tooltip: 'Kundenname',
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'pmName',
                                text: 'PM Name',
                                tooltip: 'PM Name',
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                minWidth: 150,
                                dataIndex: 'vendorName',
                                text: 'Vendor Name',
                                tooltip: 'Vendor Name',
                                flex: 1,
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 60,
                                dataIndex: 'vendorNumber',
                                text: 'Vendornr.',
                                tooltip: 'Vendornummer',
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                width: 80,
                                dataIndex: 'wordsCount',
                                text: 'Gewichtete Wörter',
                                tooltip: 'Gewichtete Wörter',
                                format: '00',
                                align: 'right',
                                hidden:true,
                                renderer: function(value,metaData){
                                    return value > 0 ? value : '';
                                },
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 60,
                                dataIndex: 'wordsDescription',
                                text: 'Beschreibung Wörter.',
                                tooltip: 'Beschreibung Wörter',
                                maxLength:40,
                                hidden:true,
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                width: 80,
                                dataIndex: 'hoursCount',
                                text: 'Stunden',
                                tooltip: 'Stunden',
                                format: '00',
                                align: 'right',
                                hidden:true,
                                renderer: function(value,metaData){
                                    return value > 0 ? value : '';
                                },
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 60,
                                dataIndex: 'hoursDescription',
                                text: 'Beschreibung Stunden',
                                tooltip: 'Beschreibung Stunden',
                                maxLength:40,
                                hidden:true,
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                width: 80,
                                dataIndex: 'additionalCount',
                                text: 'Zusatzposition Menge',
                                tooltip: 'Zusatzposition Menge',
                                format: '00',
                                align: 'right',
                                hidden:true,
                                renderer: function(value,metaData){
                                    return value > 0 ? value : '';
                                },
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 60,
                                dataIndex: 'additionalDescription',
                                text: 'Beschreibung Zusatzposition',
                                tooltip: 'Beschreibung Zusatzposition',
                                maxLength:40,
                                hidden:true,
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 60,
                                dataIndex: 'additionalUnit',
                                text: 'Zusatzposition Einheit',
                                tooltip: 'Zusatzposition Einheit',
                                hidden:true,
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                width: 80,
                                dataIndex: 'additionalPrice',
                                text: 'Zusatzposition Bestellpreis',
                                tooltip: 'Zusatzposition Bestellpreis',
                                format: '00',
                                align: 'right',
                                hidden:true,
                                renderer: function(value,metaData){
                                    return value > 0 ? value : '';
                                },
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 60,
                                dataIndex: 'transmissionPath',
                                text: 'Übertragungsweg',
                                tooltip: 'Übertragungsweg',
                                hidden:true,
                                filter: {
                                    type: 'list',
                                    options: Erp.data.transmissionPath,
                                    phpMode: false
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 60,
                                dataIndex: 'additionalInfo',
                                text: 'Weitere Infos',
                                tooltip: 'Weitere Infos',
                                hidden:true,
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                width: 100,
                                dataIndex: 'taxPercent',
                                text: 'Vendorsteuersatz',
                                tooltip: 'Vendorsteuersatz',
                                align: 'right',
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'moneycolumn',
                                width: 70,
                                dataIndex: 'netValue',
                                align: 'right',
                                tooltip: 'PO-Wert',
                                bind: {
                                    text: '{baseCurrency} PO-Wert'
                                },
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'moneycolumn',
                                width: 70,
                                dataIndex: 'taxValue',
                                align: 'right',
                                tooltip: 'Umsatzsteuer',
                                bind: {
                                    text: '{baseCurrency} USt.'
                                },
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'moneycolumn',
                                width: 100,
                                dataIndex: 'grossValue',
                                align: 'right',
                                tooltip: 'PO-Wert Brutto',
                                bind: {
                                    text: '{baseCurrency} PO-Wert Brutto'
                                },
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'moneycolumn',
                                width: 100,
                                dataIndex: 'originalGrossValue',
                                text: 'Wert Vendorwährung',
                                tooltip: 'Wert Vendorwährung',
                                align: 'right',
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 80,
                                dataIndex: 'vendorCurrency',
                                text: 'Vend. Währg.',
                                tooltip: 'Vendor Währung',
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                renderer: function (value, metaData, record, rowIndex, colIndex, store, view) {
                                    if (Erp.data.purchaseOrder.stateLabels[value]) {
                                        return Erp.data.purchaseOrder.stateLabels[value];
                                    }
                                    //TODO 
                                    //pdfexists true|false
                                    //latestIdWithoutPdf < ID
                                    //return '<a target="_blank" href="restURL/ID/download.pdf">'+value+'</a>';
                                    return value;
                                },
                                dataIndex: 'state',
                                text: 'Status',
                                tooltip: 'Status',
                                filter: me.processMyListFilter({
                                    type: 'list'
                                })
                            },
                            {
                                xtype: 'datecolumn',
                                width: 100,
                                dataIndex: 'billDate',
                                text: 'Rechn.-dat. Kred.',
                                tooltip: 'Rechnungsdatum Kreditoren',
                                filter: {
                                    type: 'date'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 80,
                                dataIndex: 'bookingMonth',
                                text: 'Buchungsmonat',
                                tooltip: 'Buchungsmonat',
                                renderer: function (value, metaData, record, rowIndex, colIndex, store, view) {
                                    var months = Ext.Date.monthNames,
                                        month = (value >= 0 ? value : -1);
                                    return months[month] || '';
                                },
                                filter: me.processConversionMonthFilter({
                                    type: 'list'
                                })
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 80,
                                dataIndex: 'bookingYear',
                                text: 'Buchungsjahr',
                                tooltip: 'Buchungsjahr',
                                renderer: function (value, metaData, record, rowIndex, colIndex, store, view) {
                                    return value > 0 ? value : "";
                                },
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'datecolumn',
                                width: 105,
                                dataIndex: 'billReceivedDate',
                                text: 'Rechn.-eing. Kred.',
                                tooltip: 'Rechnungseingang Kreditoren',
                                filter: {
                                    type: 'date'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                width: 80,
                                dataIndex: 'paymentTerm',
                                text: 'Zahlungsfrist',
                                tooltip: 'Zahlungsfrist',
                                format: '00',
                                align: 'right',
                                filter: {
                                    type: 'number'
                                }
                            },
                            {
                                xtype: 'booleancolumn',
                                width: 60,
                                dataIndex: 'checked',
                                text: 'Geprüft',
                                tooltip: 'Geprüft',
                                falseText: '&#160;',
                                trueText: 'Ja',
                                filter: {
                                    type: 'boolean'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'checkerName',
                                text: 'Geprüft von',
                                tooltip: 'Geprüft von',
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'datecolumn',
                                width: 80,
                                dataIndex: 'paidDate',
                                text: 'Bezahlt am',
                                tooltip: 'Bezahlt am',
                                filter: {
                                    type: 'date'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 90,
                                dataIndex: 'billNumber',
                                text: 'Rech.-nr. V.',
                                tooltip: 'Rechnungsnummer Vendor',
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'commentcolumn',
                                tooltip:'Kommentare',
                                variableRowHeight: true,
                                minWidth: 100,
                                flex: 1
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 100,
                                dataIndex: 'editorName',
                                text: 'Editor Name',
                                tooltip: 'Editor Name',
                                filter: {
                                    type: 'string'
                                }
                            },
                            {
                                xtype: 'datecolumn',
                                hidden: true,
                                width: 80,
                                dataIndex: 'modifiedDate',
                                text: 'PO bearbeitet am',
                                tooltip: 'PO bearbeitet am',
                                format: 'd.m.Y H:i',
                                filter: {
                                    type: 'date'
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                renderer: function (value, metaData, record, rowIndex, colIndex, store, view) {
                                    if (Erp.data.project.stateLabels[value]) {
                                        return Erp.data.project.stateLabels[value];
                                    }
                                    return value;
                                },
                                width: 80,
                                dataIndex: 'orderStatus',
                                text: 'Auftragsstatus',
                                tooltip: 'Auftragsstatus',
                                filter: me.processMyListFilter2({
                                    type: 'list'
                                })
                            },
                            {
                                xtype: 'gridcolumn',
                                minWidth: 100,
                                dataIndex: 'sourceLang',
                                renderer: function(value,metaData){
                                    if(!value){
                                        return '';
                                    }
                                    var langStr = Erp.data.sourceLanguages,
                                        retVal ="",
                                        tooltip="";

                                    langStr.forEach(function(element) {
                                        if(element.value==value){
                                            retVal =element.value;
                                            tooltip=element.text;
                                            return false;
                                        }
                                    });
                                    metaData.tdAttr = 'data-qtip="' +tooltip + '"';
                                    return retVal;
                                },
                                text: 'Quellsprache',
                                tooltip: 'Quellsprache',
                                flex: 1,
                                filter: {
                                    type: 'list',
                                    idField:'value',
                                    labelField:'value',
                                    options:Erp.Utils.arrayAlphabeticalSort(Erp.data.sourceLanguages),
                                    phpMode: false
                                }
                            },
                            {
                                xtype: 'gridcolumn',
                                minWidth: 100,
                                dataIndex: 'targetLang',
                                renderer: function(value,metaData){
                                    if(!value){
                                        return '';
                                    }
                                    var langStr = Erp.data.targetLanguages,
                                        retVal ="",
                                        tooltip="";

                                    langStr.forEach(function(element) {
                                        if(element.value==value){
                                            retVal =element.value;
                                            tooltip=element.text;
                                            return false;
                                        }
                                    });
                                    metaData.tdAttr = 'data-qtip="' +tooltip + '"';
                                    return retVal;
                                },
                                text: 'Zielsprachen',
                                tooltip: 'Zielsprachen',
                                flex: 1,
                                filter: {
                                    type: 'list',
                                    idField:'value',
                                    labelField:'value',
                                    options: Erp.Utils.arrayAlphabeticalSort(Erp.data.targetLanguages),
                                    phpMode: false
                                }
                            }
                        ],
                        selModel: {
                            pruneRemoved: false,
                            mode:'MULTI',
                            listeners: {
                                selectionchange: {
                                    fn: 'onRowModelSelectionChange',
                                    scope: 'controller'
                                }
                            }
                        },
                        dockedItems: me.addDockeditems(sumpanel),
                        viewConfig: {
                            listeners: {
                                beforerefresh: 'onViewBeforeRefresh'
                            }
                        },
                        plugins: [
                            {
                                ptype: 'gridfilters'
                            }
                        ],
                        listeners: {
                            itemdblclick: {
                                fn: 'onGridpanelItemDblClick',
                                scope: 'controller'
                            }
                        }
                    },
                    {
                        xtype: 'panel',
                        region: 'east',
                        split: true,
                        resizable: true,
                        reference: 'display',
                        hidden: true,
                        layout: 'accordion',
                        bodyBorder: true,
                        width:'90%',
                        items: [
                            {
                                xtype: 'purchaseordersform'
                            },
                            {
                                xtype: 'commentpanel',
                                parentConfig: {
                                    type: 'purchaseOrder',
                                    key: 'purchaseOrderId'
                                },
                                controller: {
                                    type: 'commentpanel',
                                    id: 'purchaseordercommentpanel'
                                },
                                title: 'PO Kommentare'
                            }
                        ]
                    }
                ]
            };
        if (instanceConfig) {
            me.self.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    processMyListFilter: function (config) {
        config.options = [];
        Ext.Object.each(Erp.data.purchaseOrder.stateLabels, function (key, item) {
            config.options.push({ id: key, text: item });
        });
        return config;
    },
    processMyListFilter2: function (config) {
        config.options = [];
        Ext.Object.each(Erp.data.project.stateLabels, function (key, item) {
            config.options.push({ id: key, text: item });
        });
        return config;
    },
    processConversionMonthFilter: function (config) {
        config.options = [];
        Ext.Object.each(Ext.Date.monthNames, function (key, item) {
            config.options.push({ id: key, text: item });
        });
        return config;
    },
    onViewBeforeRefresh: function (dataview, eOpts) {
        //workaround / fix for TMUE-11
        dataview.getSelectionModel().deselectAll();
    },

    onBufferedStoreLoad: function () {
        //this seems to be a bug, the store handler calls the callback in the panel instead in the controller,
        //so we have to bypass the call to the controller:
        var c = this.getController();
        c.onBufferedStoreLoad.apply(c, arguments);
    },

    addPo: function (project) {
        this.getController().add(projects);
    },
    cancleForms: function () {
        var me = this,
            controller = me.getController();
        controller.cancelAll();
    },
    addDockeditems: function (inputConfig) {
        var obj = [];
        obj.push(Ext.Object.merge(Ext.clone(inputConfig), {
            reference: "sumpanel",
            padding: '10 0 0 10'// (top, right, bottom, left).
        }));
        obj.push(Ext.Object.merge(Ext.clone(inputConfig), {
            reference: "sumpanelselected",
            padding: '0 0 0 10'// (top, right, bottom, left).
        }));
        return obj;
    }
});