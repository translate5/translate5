/*
 * File: app/model/CommentBase.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Erp.model.CommentBase', {
    extend: 'Ext.data.Model',

    requires: [
        'Ext.data.field.Integer',
        'Ext.data.field.String',
        'Ext.data.field.Boolean',
        'Ext.data.field.Date',
        'Ext.data.proxy.Rest',
        'Ext.data.reader.Json',
        'Ext.data.writer.Json'
    ],

    fields: [
        {
            type: 'int',
            allowNull: true,
            name: 'id'
        },
        {
            type: 'int',
            name: 'foreignId'
        },
        {
            type: 'string',
            name: 'userName',
            persist: false
        },
        {
            type: 'string',
            name: 'comment'
        },
        {
            type: 'boolean',
            name: 'isEditable',
            persist: false
        },
        {
            type: 'date',
            name: 'modified',
            persist: false,
            dateFormat: 'Y-m-d H:i:s'
        },
        {
            type: 'date',
            name: 'created',
            persist: false,
            dateFormat: 'Y-m-d H:i:s'
        }
    ],

    proxy: {
        type: 'rest',
        reader: {
            type: 'json',
            rootProperty: 'rows',
            transform: {
                fn: function(data) {
                    data.foreignId = data[this.foreignField];
                    return data;
                }
            }
        },
        writer: {
            type: 'json',
            transform: {
                fn: function(data) {
                    data[this.foreignField] = data.foreignId;
                    return data;
                }
            },
            encode: true,
            rootProperty: 'data'
        }
    }
});