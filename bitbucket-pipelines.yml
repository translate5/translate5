image: atlassian/default-image:2

options:
  docker: true

# Increase memory from default 1024 to 3072 mb as otherwise run of
# the pipeline fails with error "Container 'docker' exceeded memory limit"
definitions:
  services:
    docker:
      memory: 7128
  steps:
    - step: &build-step
        name: SonarQube analysis
        script:
          - pipe: sonarsource/sonarqube-scan:1.0.0
            variables:
              SONAR_HOST_URL: ${SONAR_HOST_URL} # Get the value from the repository/workspace variable.
              SONAR_TOKEN: ${SONAR_TOKEN} # Get the value from the repository/workspace variable. You shouldn't set secret in clear text here.
  caches:
    sonar: ~/.sonar

clone:
  depth: full

pipelines:
  custom:
    test:
      - variables:

          # Prompt for the branch to be checked out if there is no branch we're going to test in any of other repos
          - name: GIT_BRANCH_FALLBACK
            default: develop
            allowed-values:
              - develop
              - master
          # Prompt for the specific test or suite to run, if specific
          - name: SPECIFIC_TEST_OR_SUITE
      - step:
          size: 2x
          script:

            # Prepare env variables
            - export APP_HOST=localhost
            - export MYSQL_USERNAME=translate5
            - export MYSQL_PASSWORD=translate5
            - export MYSQL_DATABASE=translate5
            - export MYSQL_ROOT_PASSWORD=r00t
            - export MYSQL_PORT=3306
            - export MESSAGEBUS_HOST=frontendmessagebus
            - export MESSAGEBUS_PORT=9057
            - export LANGUAGETOOL_HOST=languagetool
            - export GIT_BRANCH=$BITBUCKET_BRANCH
            - export SPECIFIC_TEST_OR_SUITE=$SPECIFIC_TEST_OR_SUITE

            # Clone docker-repo as we need compose-file from there
            - git clone https://$GIT_USER:$GIT_TOKEN@bitbucket.org/mittagqi/docker.git
            - cd docker

            # We need to login to dockerhub as private images are invoked
            - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD

            # Run bunch of containers
            - docker-compose -f docker-compose.runtests.yml up --exit-code-from php
  branches:
    '{develop}':
      - step: *build-step
