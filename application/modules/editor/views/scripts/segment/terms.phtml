<?php
/*
START LICENSE AND COPYRIGHT

 This file is part of translate5
 
 Copyright (c) 2013 - 2017 Marc Mittag; MittagQI - Quality Informatics;  All rights reserved.

 Contact:  http://www.MittagQI.com/  /  service (ATT) MittagQI.com

 This file may be used under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE version 3
 as published by the Free Software Foundation and appearing in the file agpl3-license.txt 
 included in the packaging of this file.  Please review the following information 
 to ensure the GNU AFFERO GENERAL PUBLIC LICENSE version 3 requirements will be met:
 http://www.gnu.org/licenses/agpl.html
  
 There is a plugin exception available for use with this release of translate5 for
 translate5: Please see http://www.translate5.net/plugin-exception.txt or 
 plugin-exception.txt in the root folder of translate5.
  
 @copyright  Marc Mittag, MittagQI - Quality Informatics
 @author     MittagQI - Quality Informatics
 @license    GNU AFFERO GENERAL PUBLIC LICENSE version 3 with plugin-execption
			 http://www.gnu.org/licenses/agpl.html http://www.translate5.net/plugin-exception.txt

END LICENSE AND COPYRIGHT
*/

$this->translate = ZfExtended_Zendoverwrites_Translate::getInstance();
if(empty($this->termGroups)) {
    echo '<p style="margin-bottom:5px;">'.$this->translate->_('Keine Terminologie vorhanden!').'</p>';
    return;
}
$termDivParams = function($class, $rtl) {
    $params =[$class];
    if($rtl) {
        $params[] = 'direction-rtl"';
        $params[] = 'dir="rtl';
    }
    return join(' ', $params);
}
?>
<div class="term-box">
<?php
    $i = 0;
    $termStatus = [
        'permitted' => $this->translate->_('erlaubte Benennung'),
        'forbidden' => $this->translate->_('verbotene Benennung'),
        'preferred' => $this->translate->_('Vorzugsbenennung'),
        'unknown' => $this->translate->_('Unbekannter Term Status'),
    ];
    foreach($this->termGroups as $termGroup) {
        $target = array();
        $source = array();
        $isSourceRtl = false;
        $isTargetRtl = false;
        foreach($termGroup as $term) {
            settype($term->rtl, 'boolean');
            $guiStatus = $term->status;
            if(empty($this->termStatMap[$guiStatus]) || empty($termStatus[$this->termStatMap[$guiStatus]])) {
                $guiStatus = 'unknown';
            }
            else {
                $guiStatus = $this->termStatMap[$guiStatus];
            }
            $title = $termStatus[$guiStatus].' ('.$term->status.')';
            $src = $this->publicModulePath.'/images/termStatus/'.$guiStatus.'.png';
            $itemStr = sprintf('<img src="%1$s" alt="%2$s" title="%2$s"/>', $src, $title);
            $class = array('term', $term->status);
            if($term->used){
                $class[] = 'used';
            }
            if($term->transFound){
                $class[] = 'transfound';
            }
            $definition = htmlspecialchars($term->definition);
            $itemStr .= sprintf('<span class="%3$s" title="%2$s">%1$s</span>', $term->term, $definition, join(' ', $class));
            if(!empty($term->definition)){
                $src = $this->publicModulePath.'/images/termStatus/information-small-white.png';
                $itemStr .= sprintf(' <img src="%1$s" alt="%2$s" title="%2$s"/>', $src, $definition);
            }
            if($term->isSource) {
                $source[] = $itemStr;
                $isSourceRtl = $term->rtl || $isSourceRtl;
            }
            else {
                $target[] = $itemStr;
                $isTargetRtl = $term->rtl || $isTargetRtl;
            }
        }
?>
        <div class="term-group <?php echo ($i++ % 2 == 0)?'even':'odd'; ?>">
            <div class="<?php echo $termDivParams('source-terms', $isSourceRtl);?>">
                <?php echo join("<br />\n", $source); ?>
            </div>
            <div class="<?php echo $termDivParams('target-terms', $isTargetRtl);?>">
                <?php echo join("<br />\n", $target); ?>
            </div>
        </div>
<?php
    }
?>
</div>