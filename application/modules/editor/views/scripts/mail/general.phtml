<?php
/*
START LICENSE AND COPYRIGHT

 This file is part of translate5
 
 Copyright (c) 2013 - 2021 Marc Mittag; MittagQI - Quality Informatics;  All rights reserved.

 Contact:  http://www.MittagQI.com/  /  service (ATT) MittagQI.com

 This file may be used under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE version 3
 as published by the Free Software Foundation and appearing in the file agpl3-license.txt 
 included in the packaging of this file.  Please review the following information 
 to ensure the GNU AFFERO GENERAL PUBLIC LICENSE version 3 requirements will be met:
 http://www.gnu.org/licenses/agpl.html
  
 There is a plugin exception available for use with this release of translate5 for
 translate5: Please see http://www.translate5.net/plugin-exception.txt or 
 plugin-exception.txt in the root folder of translate5.
  
 @copyright  Marc Mittag, MittagQI - Quality Informatics
 @author     MittagQI - Quality Informatics
 @license    GNU AFFERO GENERAL PUBLIC LICENSE version 3 with plugin-execption
			 http://www.gnu.org/licenses/agpl.html http://www.translate5.net/plugin-exception.txt

END LICENSE AND COPYRIGHT
*/

/* @var $this Zend_View */

// include the default mail data
$this->render('defaultGeneral.phtml');

$dateFormater=function($date){
    if(!isset($date) || empty($date)){
        return '-';
    }
    return $this->workflowNotifyMail()->dateFormat($date,true);
};

if(isset($this->taskUserAssoc)){
    //format the assoc deadlineDate to the required format
    $this->taskUserAssoc['deadlineDate']=$dateFormater($this->taskUserAssoc['deadlineDate']);
}

//format all user assocs deadlineDates to the required format
if(isset($this->associatedUsers) && !empty($this->associatedUsers)){
    $this->associatedUsers=array_map(function($item) use($dateFormater){
        $item['deadlineDate']=$dateFormater($item['deadlineDate'] ?? null);
        return $item;
    }, $this->associatedUsers);
    
}

//format all user assocs deadlineDates to the required format
if(isset($this->previousUsers) && !empty($this->previousUsers)){
    $this->previousUsers=array_map(function($item) use($dateFormater){
        $item['deadlineDate']=$dateFormater($item['deadlineDate'] ?? null);
        return $item;
    }, $this->previousUsers);
        
}

//prepare the default taskFragment if a task is provided
if(!empty($this->pm)) {
    $this->data['pm'] = $this->pm->getDataObject();
}

if(!empty($this->project)) {

    // Build project focus url
    $urlPart = '/editor#project/' . $this->project->getId() . '/' . ($this->project->getId() + 1) . '/focus';

    /** @var editor_Models_Customer_Customer $customer */
    $customer = ZfExtended_Factory::get('editor_Models_Customer_Customer');
    $customer->load($this->project->getCustomerId());

    // If the customer domain is set, use this domain as portal url and link
    if (empty($customer->getDomain())) {
        $this->data['portalLink']='<a href="' . $this->data['portalUrl'] . $urlPart . '">' . $this->data['portalUrl'] . '</a>';
    } else {
        $this->data['portalUrl'] = $customer->getDomain();
        $this->data['portalLink'] = '<a href="' . $this->data['portalUrl'] . $urlPart . '">' . $customer->getDomain() . '</a>';
    }
}
if(!empty($this->task)) {
    $taskData = $this->workflowNotifyMail()->getTaskLanguages($this->task);
    $taskData['task'] = $this->task->getDataObject();

    $urlPart = '/editor#task/'.$this->task->getId().'/1/edit';

    $taskData['deadlineDate'] = $this->taskUserAssoc['deadlineDate'] ?? '-';
    $taskData['wordCount'] = $this->task->getWordCount() > 0 ? $this->task->getWordCount() : '-';
    
    $customer=ZfExtended_Factory::get('editor_Models_Customer_Customer');
    /* @var $customer editor_Models_Customer_Customer */
    $customer->load($this->task->getCustomerId());
    //if the customer domain is set, use this domain as portal url and link
    if(empty($customer->getDomain())){
        $this->data['portalLink']='<a href="'.$this->data['portalUrl'].$urlPart.'">'.$this->data['portalUrl'].'</a>';
    }
    else {
        $this->data['portalUrl']=$customer->getDomain();
        $this->data['portalLink']='<a href="'.$customer->getDomain().$urlPart.'">'.$customer->getDomain().'</a>';
    }
    
    //we have to pre-apply the relaisLang Fragment to inject the language itself
    $taskData['relaisLanguageFragment'] = $this->templateApply($taskData['relaisLanguageFragment'], $taskData);
    
    $this->data['taskFragment'] = $this->templateApply('<b>Aufgabe:</b> {task.taskName}<br />
    <b>Quellsprache:</b> {sourceLanguageTranslated}<br />
    <b>Zielsprache:</b> {targetLanguageTranslated}<br />
    {relaisLanguageFragment}<b>Lieferdatum:</b> {deadlineDate}<br />
    <b>Wortanzahl:</b> {wordCount}<br />', $taskData);
}

$this->taskData = isset($taskData) ? $taskData : null;
